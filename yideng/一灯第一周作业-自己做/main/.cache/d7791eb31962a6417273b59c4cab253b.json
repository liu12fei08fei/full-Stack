{"dependencies":[],"generated":{"js":"\"use strict\";\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n  var PraiseButton = function () {\n    // static \n    function PraiseButton(ele, num) {\n      _classCallCheck(this, PraiseButton);\n\n      this.ele = ele;\n      this.num = num;\n    }\n\n    _createClass(PraiseButton, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        var ele = document.querySelector(this.ele);\n        ele.onclick = function () {\n          if (_this.num < 10) {\n            _this.num++;\n            ele.innerHTML = _this.num;\n            if (_this.num == 10) {\n              ele.style.cssText = \"background:#ccc\";\n            }\n          }\n        };\n      }\n    }]);\n\n    return PraiseButton;\n  }();\n  // 父类\n\n\n  new PraiseButton('.favour', 0).init();\n  // 子类\n\n  var Thumb = function (_PraiseButton) {\n    _inherits(Thumb, _PraiseButton);\n\n    function Thumb(ele, num) {\n      _classCallCheck(this, Thumb);\n\n      return _possibleConstructorReturn(this, (Thumb.__proto__ || Object.getPrototypeOf(Thumb)).call(this, ele, num));\n    }\n\n    _createClass(Thumb, [{\n      key: \"init\",\n      value: function init() {\n        _get(Thumb.prototype.__proto__ || Object.getPrototypeOf(Thumb.prototype), \"init\", this).call(this);\n      }\n    }]);\n\n    return Thumb;\n  }(PraiseButton);\n\n  new Thumb('.box', 0).init();\n})();"},"hash":"e0ebb28dc7697e0aa1894c62f946848d"}